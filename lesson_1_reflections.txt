How did viewing a diff between two versions of a file help you see the bug that was introduced? It allowed me to focus on just the lines with changes, which made the typo easier to spot.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term? Oh boy. It would sure help to recover from some mistakes.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
a) It allows the programmer to document the change(s).
b) It is error prone because the programmer may forget to commit.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately? Because Git was built for software projects.

How can you use the commands git log and git diff to view the history of files?
a) git log summarizes the changes that were made.
b) git diff displays the differences between 2 commits.

How might using version control make you more confident to make changes that could break something? I know that I can return to the last good state.

Now that you have your workspace set up, what do you want to try using Git for? Tracking my projects and coordinating changes between developers.